apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: my-go-app
  labels:
    app: my-go-app
spec:
  replicas: 3  # Total replicas (stable + canary)
  selector:
    matchLabels:
      app: my-go-app
  strategy:
    canary:
      steps:
        - setWeight: 10  # 10% de las réplicas serán canary
        - pause: {}  # Pausa para verificar el estado del canary
        - setWeight: 50  # Si el canary está correcto, sube al 50%
        - pause: {}  # Pausa para verificar el estado
        - setWeight: 100  # Finaliza el rollout con el 100%
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: my-go-app
    spec:
      containers:
        - name: my-go-app
          image: europe-docker.pkg.dev/my-holded-test-project/my-go-app/my-go-app:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: my-go-app
spec:
  selector:
    app: my-go-app
  ports:
    - protocol: TCP
      port: 443
      targetPort: 8080
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-go-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  - host: "*"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-go-app
            port:
              number: 443
  tls:
  - hosts:
    - "*"
    secretName: my-go-app-tls
